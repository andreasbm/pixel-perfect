@import "util";
@import "css-vars";

/**
 For a given hue in a palette, return the contrast color from the map of contrast palettes.
 @param $color-map
 @param $hue
 */
@function pp-contrast($palette, $hue) {
	@return pp-map-get(pp-map-get($palette, "contrast"), $hue);
}

@function palette($name, $palette, $default: 500, $lighter: 400, $darker: 600) {
	$vars: (
		"--#{$name}-default": pp-map-get($palette, $default),
		"--#{$name}-lighter": pp-map-get($palette, $lighter),
		"--#{$name}-darker": pp-map-get($palette, $darker),
		"--#{$name}-default-contrast": pp-contrast($palette, $default),
		"--#{$name}-lighter-contrast": pp-contrast($palette, $lighter),
		"--#{$name}-darker-contrast": pp-contrast($palette, $darker)
	);

	@each $hue, $color in $palette {
		@if is-unitless($hue) {
			$vars: pp-map-collect($vars, (
				"--#{$name}-#{$hue}": $color,
				"--#{$name}-#{$hue}-contrast": pp-contrast($palette, $hue)
			));
		}
	}

	@return $vars;
}

//@mixin theme-vars($theme-map) {
//	@each $key, $palette in $theme-map {
//		@include palette-vars($key, $palette);
//	}
//}